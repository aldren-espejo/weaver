$switch-xsmall-size: 15px !default;
$switch-small-size: 20px !default;
$switch-medium-size: 25px !default;
$switch-large-size: 30px !default;
$switch-xlarge-size: 35px !default;

$switch-toggle-gap: 3px !default;

@mixin components_switch_switch($b){

	%switch-xsmall-base-#{$b}{

		padding-left: rem-calc(($switch-xsmall-size * 2) + ($switch-xsmall-size / 3));

		&:before{
			width: rem-calc(($switch-xsmall-size * 2) - ($switch-toggle-gap * 2));
			height: rem-calc($switch-xsmall-size);
		}

		&:after{
			width: rem-calc($switch-xsmall-size - ($switch-toggle-gap * 2));
			height: rem-calc($switch-xsmall-size - ($switch-toggle-gap * 2));
			left: $switch-toggle-gap;
		}	
	}

	%switch-small-base-#{$b}{

		padding-left: rem-calc(($switch-small-size * 2) + ($switch-xsmall-size / 3));

		&:before{
			width: rem-calc(($switch-small-size * 2) - ($switch-toggle-gap * 2));
			height: rem-calc($switch-small-size);
		}

		&:after{
			width: rem-calc($switch-small-size - ($switch-toggle-gap * 2));
			height: rem-calc($switch-small-size - ($switch-toggle-gap * 2));
			left: $switch-toggle-gap;
		}	
	}

	%switch-medium-base-#{$b}{

		padding-left: rem-calc(($switch-medium-size * 2) + ($switch-xsmall-size / 3));

		&:before{
			width: rem-calc(($switch-medium-size * 2) - ($switch-toggle-gap * 2));
			height: rem-calc($switch-medium-size);
		}

		&:after{
			width: rem-calc($switch-medium-size - ($switch-toggle-gap * 2));
			height: rem-calc($switch-medium-size - ($switch-toggle-gap * 2));
			left: $switch-toggle-gap;
		}	
	}

	%switch-large-base-#{$b}{

		padding-left: rem-calc(($switch-large-size * 2) + ($switch-xsmall-size / 3));

		&:before{
			width: rem-calc(($switch-large-size * 2) - ($switch-toggle-gap * 2));
			height: rem-calc($switch-large-size);
		}

		&:after{
			width: rem-calc($switch-large-size - ($switch-toggle-gap * 2));
			height: rem-calc($switch-large-size - ($switch-toggle-gap * 2));
			left: $switch-toggle-gap;
		}	
	}

	%switch-xlarge-base-#{$b}{

		padding-left: rem-calc(($switch-xlarge-size * 2) + ($switch-xsmall-size / 3));

		&:before{
			width: rem-calc(($switch-xlarge-size * 2) - ($switch-toggle-gap * 2));
			height: rem-calc($switch-xlarge-size);
		}

		&:after{
			width: rem-calc($switch-xlarge-size - ($switch-toggle-gap * 2));
			height: rem-calc($switch-xlarge-size - ($switch-toggle-gap * 2));
			left: $switch-toggle-gap;
		}	
	}

	%switch-checked-xsmall-base-#{$b}{
		transform: translate(rem-calc($switch-xsmall-size - ($switch-toggle-gap * 2)), -50%);
	}

	%switch-checked-small-base-#{$b}{
		transform: translate(rem-calc($switch-small-size - ($switch-toggle-gap * 2)), -50%);
	}

	%switch-checked-medium-base-#{$b}{
		transform: translate(rem-calc($switch-medium-size - ($switch-toggle-gap * 2)), -50%);
	}

	%switch-checked-large-base-#{$b}{
		transform: translate(rem-calc($switch-large-size - ($switch-toggle-gap * 2)), -50%);
	}

	%switch-checked-xlarge-base-#{$b}{
		transform: translate(rem-calc($switch-xlarge-size - ($switch-toggle-gap * 2)), -50%);
	}	
}


@mixin switch($size: null, $skin: null){

	input + label{
		
	}

	@if $size {
		input + label{
			@extend %e_padding-#{$size}-#{$current-breakpoint};
			@extend %e_text-#{$size}-#{$current-breakpoint};
			@extend %switch-#{$size}-base-#{$current-breakpoint};			
		}

		input:checked + label{

			&:after{
				@extend %switch-checked-#{$size}-base-#{$current-breakpoint};
			}
		}		
	}

	@if $skin {
		input + label{
			&:before{
				@extend %switch-#{$skin}-skin-#{$current-breakpoint};
			}

			&:after{
				@extend %switch-toggle-#{$skin}-skin-#{$current-breakpoint};
			}			
		}

		input:checked + label{

			&:before{
				@extend %switch-checked-#{$skin}-skin-#{$current-breakpoint};
			}
		}		
	}
	
}


[role="switch"] input{
	@extend %e_position-absolute-#{$current-breakpoint};
	top:0;
	left: 5px;
	padding: 0;
	opacity: 0;

	& + label {
		@extend %e_position-relative-#{$current-breakpoint};
		@extend %e_display-inline-block-#{$current-breakpoint};
		cursor: pointer;

		&:before, &:after{
			@extend %e_display-inline-block-#{$current-breakpoint};
			@extend %e_position-absolute-#{$current-breakpoint};
			@extend %e_center-vertical-#{$current-breakpoint};
			content: " ";
		}

		&:before{
			left: 0;
		}

		&:after{
			content: " ";
			transition: all 0.15s ease-out;
		}
	}
}